<UserControl x:Class="Main.UserControls.RightPanel.Configs.RightPanelReceiverConfigUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:utils="clr-namespace:Main.Utils"
             xmlns:converters="clr-namespace:Main.Converters"
             xmlns:models="clr-namespace:Main.Models"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="500">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}"></Style>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}"></Style>
        <converters:BoolToTextWrappingValueConverter x:Key="BoolToTextWrappingConverter" />
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />

    </UserControl.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" /> <!-- detach button -->
            <RowDefinition Height="Auto" /> <!-- config -->
            <RowDefinition Height="*" /> <!-- receivedMessageContent -->
            <RowDefinition Height="Auto" /> <!-- buttons at the bottom -->

        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0"
                    Grid.Column="3"
                    Margin="5,2,5,0"
                    HorizontalAlignment="Right">
            <Button
                Margin="5,5,5,0"
                MinWidth="75"
                Command="{Binding CurrentSelectedConfigModelItem.DetachFromPanelCommand}"
                Visibility="{Binding CurrentSelectedConfigModelItem.IsEmbeddedInsideRightPanel,
                Converter={StaticResource BoolToVisibilityConverter} }"
                Content="Detach" />

        </StackPanel>

        <GroupBox Grid.Row="1"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Header="Message receiver configuration"
                  Margin="5,0,5,2"
                  IsEnabled="{Binding ElementName=ReceiveButton, Path=IsEnabled}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /> <!-- sender config name -->
                    <RowDefinition Height="Auto" /> <!-- service bus config name --> <!-- combobox -->
                    <RowDefinition Height="Auto" /> <!-- input topic name -->
                    <RowDefinition Height="Auto" /> <!-- input topic subscription name -->
                    <RowDefinition Height="Auto" /> <!-- is DeadLetter Sub Queue checkbox -->
                    <RowDefinition Height="Auto" /> <!-- On receive action groupbox -->
                </Grid.RowDefinitions>


                <Label Grid.Column="0"
                       Grid.Row="0"
                       Margin="5,2,5,2"
                       Content="Receiver config name" />

                <TextBox Grid.Column="1"
                         Grid.Row="0"
                         Margin="5,2,5,2"
                         Grid.ColumnSpan="2"
                         Text="{Binding Path=CurrentSelectedConfigModelItem.Item.ConfigName, UpdateSourceTrigger=PropertyChanged}" />

                <Label Grid.Column="0"
                       Grid.Row="1"
                       Margin="5,2,5,2"
                       Content="Service bus connection string" />


                <PasswordBox Grid.Column="1"
                             Grid.Row="1"
                             Margin="5,2,5,2"
                             Grid.ColumnSpan="2"
                             utils:PasswordBoxAssistant.BindPassword="true"
                             utils:PasswordBoxAssistant.BoundPassword="{Binding
                         Path=CurrentSelectedConfigModelItem.Item.ServiceBusConnectionString,
                         Mode=TwoWay,
                         UpdateSourceTrigger=PropertyChanged}" />


                <Label Grid.Column="0"
                       Grid.Row="2"
                       Margin="5,2,5,2"
                       Content="Input topic name" />

                <TextBox Grid.Column="1"
                         Grid.Row="2"
                         Margin="5,2,5,2"
                         Grid.ColumnSpan="2"
                         Text="{Binding Path=CurrentSelectedConfigModelItem.Item.InputTopicName, UpdateSourceTrigger=PropertyChanged}" />

                <Label Grid.Column="0"
                       Grid.Row="3"
                       Margin="5,2,5,2"
                       Content="Input topic subscription name" />

                <TextBox Grid.Column="1"
                         Grid.Row="3"
                         Margin="5,2,5,2"
                         Grid.ColumnSpan="2"
                         Text="{Binding Path=CurrentSelectedConfigModelItem.Item.InputTopicSubscriptionName, UpdateSourceTrigger=PropertyChanged}" />

                <CheckBox Grid.Column="0"
                          Grid.Row="4"
                          Margin="5,5,5,5"
                          VerticalAlignment="Center"
                          Content="Deadletter queue"
                          IsChecked="{Binding CurrentSelectedConfigModelItem.Item.IsAttachedToDeadLetterSubqueue, UpdateSourceTrigger=PropertyChanged}" />

                <Expander Grid.Column="0"
                          Grid.Row="5"
                          Grid.ColumnSpan="3"
                          Header="On message receive action" Visibility="Visible">
                    <GroupBox>
                        <StackPanel Margin="2" Orientation="Vertical">
                            <RadioButton Margin="5"
                                         Content="Complete"
                                         IsChecked="{Binding
                                            Path=CurrentSelectedConfigModelItem.Item.OnMessageReceiveAction,
                                            Converter={StaticResource EnumToBooleanConverter},
                                            ConverterParameter={x:Static models:OnMessageReceiveEnumAction.Complete} }"
                                         />
                            <RadioButton
                                Margin="5"
                                Content="Abandon"
                                IsChecked="{Binding CurrentSelectedConfigModelItem.Item.OnMessageReceiveAction,
                                            Converter={StaticResource EnumToBooleanConverter},
                                            ConverterParameter={x:Static models:OnMessageReceiveEnumAction.Abandon}
                                }"
                                />

                            <RadioButton Margin="5"
                                         VerticalAlignment="Center"
                                         x:Name="DeadLetterCheckbox"
                                         IsChecked="{Binding CurrentSelectedConfigModelItem.Item.OnMessageReceiveAction,
                                            Converter={StaticResource EnumToBooleanConverter},
                                            ConverterParameter={x:Static models:OnMessageReceiveEnumAction.MoveToDeadLetter}
                                }"
                            >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Deadletter" Margin="0,0,5,0" />
                                    <Button Content="..." Height="20" Width="75" Margin="5,0,0,0"
                                            IsEnabled="{Binding ElementName=DeadLetterCheckbox, Path=IsChecked}" />
                                </StackPanel>
                            </RadioButton>
                        </StackPanel>

                    </GroupBox>
                </Expander>


            </Grid>


        </GroupBox>

        <GroupBox Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Margin="5,2,5,2"
                  Header="Received messages:">
            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" /> <!-- textbox -->
                    <RowDefinition Height="Auto" /> <!-- labels -->

                </Grid.RowDefinitions>

                <TextBox Grid.Column="0"
                         Grid.Row="0"
                         Grid.ColumnSpan="3"
                         Margin="5,2,5,2"
                         Background="White"

                         AcceptsReturn="True"
                         VerticalScrollBarVisibility="Auto"
                         HorizontalScrollBarVisibility="Auto"
                         PreviewMouseWheel="ReceivedMessagesTextBox_OnPreviewMouseWheel"
                         TextChanged="ReceivedMessageTextBoxBoxChanged"
                         x:Name="ReceivedMessagesTextBox"
                         FontSize="{Binding CurrentSelectedConfigModelItem.Item.MsgBodyTextBoxFontSize}"
                         Style="{StaticResource TextBoxStyle}"
                         TextWrapping="{Binding CurrentSelectedConfigModelItem.Item.ShouldWordWrapLogContent, Converter={StaticResource BoolToTextWrappingConverter} }"
                         Text="{Binding CurrentSelectedConfigModelItem.ReceivedMessagesContent}">

                </TextBox>

                <StackPanel Grid.Column="0"
                            Grid.Row="1">
                    <StackPanel Orientation="Horizontal">
                        <Label> Last receiver status: </Label>
                        <Label Content="{Binding CurrentSelectedConfigModelItem.ReceiverStatusText}">
                            <Label.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding CurrentSelectedConfigModelItem.ReceiverEnumStatus}"
                                            Value="StoppedOnError">
                                            <Setter Property="Control.Foreground" Value="Red"></Setter>
                                            <Setter Property="Control.FontWeight" Value="Bold"></Setter>
                                        </DataTrigger>

                                        <DataTrigger
                                            Binding="{Binding CurrentSelectedConfigModelItem.ReceiverEnumStatus}"
                                            Value="Idle">
                                            <Setter Property="Control.Foreground" Value="Blue"></Setter>
                                            <Setter Property="Control.FontWeight" Value="Bold"></Setter>
                                        </DataTrigger>

                                        <DataTrigger
                                            Binding="{Binding CurrentSelectedConfigModelItem.ReceiverEnumStatus}"
                                            Value="Listening">
                                            <Setter Property="Control.Foreground" Value="Green"></Setter>
                                            <Setter Property="Control.FontWeight" Value="Bold"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>

                        </Label>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Margin="2,0,0,0"
                                  IsChecked="{Binding CurrentSelectedConfigModelItem.Item.ShouldScrollTextBoxToEndOnNewMessageReceive}">
                            Autoscroll
                        </CheckBox>
                        <CheckBox Margin="5,0,0,0"
                                  VerticalAlignment="Center"
                                  IsChecked="{Binding CurrentSelectedConfigModelItem.Item.ShouldWordWrapLogContent }">
                            Word wrap
                        </CheckBox>


                    </StackPanel>

                </StackPanel>


            </Grid>
        </GroupBox>

        <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal">
                <Button Margin="5" MinWidth="75"
                        Command="{Binding CurrentSelectedConfigModelItem.StartMessageReceiveCommand}"
                        x:Name="ReceiveButton">
                    Receive
                </Button>
                <Button Margin="5" MinWidth="75"
                        Command="{Binding CurrentSelectedConfigModelItem.StopMessageReceiveCommand}">
                    Stop
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Margin="5" Width="75" MinWidth="75"
                        Command="{Binding CurrentSelectedConfigModelItem.ClearMessageContentCommand}">
                    Clear
                </Button>
            </StackPanel>
        </Grid>

    </Grid>
</UserControl>