<UserControl x:Class="Main.UserControls.RightPanel.Configs.RightPanelReceiverConfigUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:utils="clr-namespace:Main.Utils"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="500">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}"></Style>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}"></Style>

    </UserControl.Resources>

    <Grid Background="Gainsboro">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" /> <!-- detach button -->
            <RowDefinition Height="Auto" /> <!-- config -->
            <RowDefinition Height="*" /> <!-- receivedMessageContent -->
            <RowDefinition Height="Auto" /> <!-- buttons at the bottom -->

        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0"
                    Grid.Column="3"
                    Margin="5,2,5,0"
                    HorizontalAlignment="Right">
            <Button
                Margin="5,5,5,0"
                MinWidth="75"
                Command="{Binding CurrentSelectedConfigModelItem.DetachFromPanelCommand}"
                Visibility="{Binding CurrentSelectedConfigModelItem.IsEmbeddedInsideRightPanel,
                Converter={StaticResource BoolToVisibilityConverter} }"
                Content="Detach" />

        </StackPanel>

        <GroupBox Grid.Row="1"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Header="Message receiver configuration"
                  Margin="5,0,5,2"
                  >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /> <!-- sender config name -->
                    <RowDefinition Height="Auto" /> <!-- service bus config name --> <!-- combobox -->
                    <RowDefinition Height="Auto" /> <!-- input topic name -->
                    <RowDefinition Height="Auto" /> <!-- input topic subscription name -->
                    <RowDefinition Height="Auto" /> <!-- is DeadLetter Sub Queue checkbox -->
                </Grid.RowDefinitions>


                <Label Grid.Column="0"
                       Grid.Row="0"
                       Margin="5,2,5,2"
                       Content="Receiver config name" />

                <TextBox Grid.Column="1"
                         Grid.Row="0"
                         Margin="5,2,5,2"
                         Grid.ColumnSpan="2"
                         Text="{Binding Path=CurrentSelectedConfigModelItem.Item.ConfigName, UpdateSourceTrigger=PropertyChanged}" />

                <Label Grid.Column="0"
                       Grid.Row="1"
                       Margin="5,2,5,2"
                       Content="Service bus connection string" />


                <PasswordBox Grid.Column="1"
                             Grid.Row="1"
                             Margin="5,0,5,2"
                             Grid.ColumnSpan="2"
                             utils:PasswordBoxAssistant.BindPassword="true"
                             utils:PasswordBoxAssistant.BoundPassword="{Binding
                         Path=CurrentSelectedConfigModelItem.Item.ServiceBusConnectionString,
                         Mode=TwoWay,
                         UpdateSourceTrigger=PropertyChanged}"

                />


                <Label Grid.Column="0"
                       Grid.Row="2"
                       Margin="5,2,5,2"
                       Content="Input topic name" />

                <TextBox Grid.Column="1"
                         Grid.Row="2"
                         Margin="5,2,5,2"
                         Grid.ColumnSpan="2"
                         Text="{Binding Path=CurrentSelectedConfigModelItem.Item.InputTopicName, UpdateSourceTrigger=PropertyChanged}" />

                <Label Grid.Column="0"
                       Grid.Row="3"
                       Margin="5,2,5,2"
                       Content="Input topic subscription name" />

                <TextBox Grid.Column="1"
                         Grid.Row="3"
                         Margin="5,2,5,2"
                         Grid.ColumnSpan="2"
                         Text="{Binding Path=CurrentSelectedConfigModelItem.Item.InputTopicSubscriptionName, UpdateSourceTrigger=PropertyChanged}" />

                <Label Grid.Column="0"
                    Grid.Row="4"
                    Margin="5,2,5,2"
                    Content="Dead letter subqueue"/>

                <CheckBox Grid.Column="1"
                          Grid.Row="4"
                          Margin="5,2,5,2"
                          VerticalAlignment="Center"
                          IsChecked="{Binding CurrentSelectedConfigModelItem.Item.IsAttachedToDeadLetterSubqueue, UpdateSourceTrigger=PropertyChanged}"
                          />

            </Grid>


        </GroupBox>

        <GroupBox Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Margin="5,2,5,2"
                  Header="Received messages:">
            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" /> <!-- textbox -->
                    <RowDefinition Height="Auto" /> <!-- labels -->

                </Grid.RowDefinitions>

                <TextBox Grid.Column="0"
                         Grid.Row="0"
                         Grid.ColumnSpan="3"
                         Margin="5,2,5,2"
                         Background="White"
                         TextWrapping="NoWrap"
                         AcceptsReturn="True"
                         VerticalScrollBarVisibility="Auto"
                         HorizontalScrollBarVisibility="Auto"
                         IsReadOnly="True"
                         TextChanged="ReceivedMessageTextBoxBoxChanged"
                         x:Name="receivedMessagesTextBox"
                         Style="{StaticResource TextBoxStyle}"
                         Text="{Binding CurrentSelectedConfigModelItem.ReceivedMessagesContent}" >

                </TextBox>

                <StackPanel Grid.Column="0"
                            Grid.Row="1">
                    <StackPanel  Orientation="Horizontal">
                        <Label> Last receiver status: </Label>
                        <Label Content="{Binding CurrentSelectedConfigModelItem.ReceiverStatus}">  </Label>
                    </StackPanel>
                    <CheckBox IsChecked="{Binding CurrentSelectedConfigModelItem.Item.ShouldScrollTextBoxToEndOnNewMessageReceive}">
                              Autoscroll</CheckBox>
                </StackPanel>



            </Grid>
        </GroupBox>

        <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal">
                <Button Margin="5" MinWidth="75"
                        Command="{Binding CurrentSelectedConfigModelItem.StartMessageReceiveCommand}">
                    Receive
                </Button>
                <Button Margin="5" MinWidth="75"
                        Command="{Binding CurrentSelectedConfigModelItem.StopMessageReceiveCommand}">
                    Stop
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Margin="5" Width="75" MinWidth="75"
                        Command="{Binding CurrentSelectedConfigModelItem.ClearMessageContentCommand}">
                    Clear
                </Button>
            </StackPanel>
        </Grid>

    </Grid>
</UserControl>